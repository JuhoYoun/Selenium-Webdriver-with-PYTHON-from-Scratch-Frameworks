Pytest Testing Framework

- Install Pytest : pip install pytest
- Naming conventions to follow for Pytest Tests
- Running Pytests from command line and PyCharm
- Running selected test files using pytest
- Running selected test Methods based on maatching keywords
- Pytest tags Mechanism to run tests based on functionality
- Failing and Skipping tests with Annotations using Pytest
- What are fixtures and importance of their Hooks in Pytest
- How Fixtures can be configured in Conftest file for better readability
- Different scopes of fixtures and their related annotations to setup Pre and Post conditions of the Test
- How Parameterization can be achieved for Tests with multiple sets of data
- How to pass command line arguments into PyTests
- Html report Generation for Pytests Execution

Pytest를 만들기 위해 pytestDemo 라는 패키지를 만들었다 그리고 먼저 test_demo1.py라는 파일을 만들었는데 pytest 패키지 안에 테스트 파일은 무조건 test_ 이렇게 시작하는것이 
convention이라고 한다

Now we are trying to write something in this testing framework standards to follow that standard. Whatever code you write, you have to write in that code in function as pytest standard. 

Pytest framework에서는 모든 테스트를 function으로 진행한다 function 이름도 test_로 시작하자


How to run pytest? Pycharm or command line

Pycharm
기본 파이참 설정대로 테스트 파일을 run 하면 pycharm은 pytest를 인식하지 못하고 그냥 파이썬 스크립트 실행하듯이 실행한다
파이참을 사용해서 pytest로 실행할 수 있다
interpreter 아이콘을 클릭하고 Edit Configuration을 눌러 Run/Debug Configurations 창으로 가자 +를 눌러 Python tests -> pytest를 선택한다 그리고 ok를 누른다
그리고 If you want to give what exactly you want to run, ok를 누르기 전에 Target을 Script Path로 설정해놓고 실행하고 싶은 테스트 파일을 선택한다 그리고 Run 아이콘을 누른다

# Any pytest file should start with test_ or end with _test
#pytest method names should start with test
#Any code should be wrapped in method only

위에 convention을 지키지 않으면 pytest가 해당 메소드나 파일을 테스트로 인식하지 않는것 같다



Running Pytest from terminal with different command flags

if you want to run all the pytest cases present in pytest package (예를 들어 pytestDemo 강의에서 만든거), just copy the path of the pytest package and
go to terminal -> cd path_of_pytest_package_directory -> py.test   명령어 입력하면 디렉토리 안에 있는 모든 테스트 케이스들을 pytest로 실행한다 이때 테스트 케이스들은 위의 
convention을 만족시키는 파일들이다

py.test -v    -v 는 verbose를 의미하고 이렇게 실행하면 it will give you more information about your test cases, execution in logs

강의에서 
import pytest

def test_firstProgram(setup):
    print("Hello")

위의 코드를 pytest로 실행시켰는데 Hello을 출력하지 않았다 왜 In pytest by default, console logs will not be shown in the output. If you want to show them, you have to pass another flag which is -s
-> py.test -v -s

이 전에 파이참에서 pytest를 실행했을 때는 파이참이 이 플래그들을 알아서 설정해서 콘솔 로그나 테스트 정보들이 나왔던것이다

In pytest, every method is considered as 1 test case

자 그르면 다음의 테스트를 실행해보자

test_demo1.py

def test_firstProgram(setup):
    print("Hello")

def test_SecondGreetCreditCard():
    print("Good Morning")

test_demo2.py

def test_firstProgram():
    msg = "Hello" #operations
    assert msg == "Hi", "Test failed because strings do not match"

이러면 1 failed 1 passed 라고 뜬다 test_demo2.py 의 test_firstProgram가 fail한걸 확인할 수 있는데 test_demo1.py에는 테스트 케이스가 두개있는데 Good Morning만 출력되고
1 passed 만 확인된다 -> In pytest, you cannot have multiple test method names with the same names. If you have that, it will override previous results.
다른 파일에 있다면 메소드 이름이 같아도 상관 없는거 같다

##############
Stay Connected to Testing Updates
Do you want to stay updated with the latest Automation Technologies/Updates/Jobs happening in Testing Industry?

Are you curious to know the Best Practices what others Use in their companies for Software Testing??

Get Social with us in LinkedIn, Facebook and Youtube see what other QA Peers are talking about on their experiences. You can have your general questions too and get suggestions from the Strongest QA Community Base

LinkedIn : https://www.linkedin.com/in/rahul-shetty-trainer/

FB QA Group : https://www.facebook.com/groups/RahulShettyAcademy/



Subscribe to our below YouTube channel for Automation Tidbits and many Miscellaneous Important QA General topics which needed for Real time projects.

YouTube : https://www.youtube.com/c/RahulShettyAcademy
#####################

How to run only one file in command line?
-> py.test test_demo2.py -v -s


py.test -k CreditCard -v -s    k stands for a specific regular expression  
-> Test Case 이름 (메소드 이름)에 CreditCard 가 들어간 테스트들만 실행된다

py.test -m smoke -v -s    -> smoke 마크되 있는 테스트만 실행한다

근데 강의에서 이렇게 마크를 이용해서 실행했더니 커스텀 마크인 smoke 마크를 configuration에 등록하라고 warning이 뜬다 이 부분은 나중에 설명한다고 한다 일단 이 등록하는건 mandatory가 아니다

predefined mark도 있다 예를 들어 skip
@pytest.mark.skip 이렇게 마크하고 py.test -v -s 해보자 그러면 skip으로 마크되어있는 테스트만 뻬고 모두 실행된다

@pytest.mark.xfail  이 마크를 달고 있다면? 그 테스트를 실행하지만 테스트 결과를 리포트에 반영하지 않는다 
예를들어 이 테스트에는 버그가 있어서 무조건 fail하게 되어있다 그런데 이 테스트 안에 어떤 operation이 다른 테스트 케이스를 진행함에 있어서 미리 실행되어야하는 과정이라고 하자 
그러면 skip마크를 쓰면 안된다 skip 마크를 쓰면 이 테스트를 실행하지 않아 해당 operation이 실행되지 않고 뒤의 테스트 케이스를 실행함에 있어서도 영향을 미치기 때문이다
이 때 xfail을 쓰면 테스트를 실행을 하되 아 테스트가 성공했는지 실패했는지 여부를 리포트에 반영하지 않는것이다


What are fixtures and their importance in pytest framework
테스트가 실행되기 전 우선적으로 실행되거나 테스트 마지막에 실행되어야하는 과정 
In selenium framework, fixture is used for openning up browser or setting up some database instances, creating some configuration properties, 
environment variables... etc

@pytest.fixture()
def setup():
    print("I will be executing first")

def test_fixtureDemo(setup)
    print("I will execute steps in fixtureDemo method")

test_fixtureDemo  테스트가 실행될 때 setup fixture가 먼저 실행되고 그 다음에 test_fixtureDemo 테스트가 실행된다

@pytest.fixture()
def setup():
    print("I will be executing first")
    yield
    print("I will execute last")

def test_fixtureDemo(setup)
    print("I will execute steps in fixtureDemo method")

위의 코드에서 test_fixtureDemo가 테스트가 실행될 때면 yield 이전의 print("I will be executing first") 가 먼저 실행되고 test_fixtureDemo 테스트가 실행된다 
그 다음에 yield의 print("I will execute last")가 실행된다 이런식으로 테스트가 끝날 때 브라우저를 닫거나 쿠키를 지우거나등을 동작을 할 수 있다

you can create fixtures anywhere beginning or end of code







