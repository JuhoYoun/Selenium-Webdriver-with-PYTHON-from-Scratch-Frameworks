How to execute javascript on the browser using Python. There are some events which needs to be performed using javascript.
All browsers are rendered based on javascript only. Chrome, Firefox... all there browsers are designed based on javascript.
So using javascript you can manipulate anything on your browser.

For example, selenium does not provide any specific method to scroll down the web page, but using javascript we can scroll down.
셀레니움이 스크롤다운 하는 방법을 직접 제시하지는 않지만 자바스크립트를 사용할 수 있게 해 우리가 스스로 스크롤다운 하는 방법을 찾게 할 수 있다.

웹브라우저에서 개발자 도구 -> 그리고 console에 들어가 보자 그리고 window.scrollBy(0,600) 이러면 숫자만큼 스크롤 된다 
console에 window. 만 써도 가능한 많은 메소드가 나온다. 이런 자바스크립트 코드를 셀레니움 파이썬 코드에 inject 해서 사용할 수 있다
스크롤다운을 많이 사용하는데 셀레니움 돌릴 때 엘리먼트가 아래에 있어서 테스트 실패하는 경우가 많아서란다. 

window.scrollBy(0, document.body.scrolHeight) -> Scroll the max height

Execute javascript in python selenium -> driver.execute_script("window.scrollBy(0, document.body.scrolHeight);")

스크린샷도 찍을 수 있다 -> driver.get_screenshot_as_file("screenshot.png")

Headless mode vs Head mode
When you run in the head mode, that means browser opens and you can see all the actions.
When you run in the headless mode, you will not see the browser invocation (invisible)
Headless mode is more faster, uses less memory

How to set headless mode
->
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument("headless")

service_obj = Service("/Users/jake/web_brower_drivers/chromedriver_mac_arm64/chromedriver")
driver = webdriver.Chrome(service=service_obj, options=chrome_options)

There are other options
For example, sometimes entering website not using https requires additional steps (Browser gives warning and we need to click advanced then proceed..)
There is an option that allow us to enter any website not using https
->
chrome_options.add_argument("--ignore-certificate-erros")


How to sort the web tables using selenium python (interview question)
쉬운 문제 그냥 코드 보자
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions
from selenium.webdriver import ActionChains
import time

browserSortedVeggies = [] 

service_obj = Service("/Users/jake/web_brower_drivers/chromedriver_mac_arm64/chromedriver")
driver = webdriver.Chrome(service=service_obj)
driver.implicitly_wait(5)

driver.get("https://rahulshettyacademy.com/seleniumPractise/#/offers/")

driver.find_elements(By.XPATH,"//span[text()='Veg/fruit name']").click()

veggieWebElements = driver.find_elements(By.XPATH,"//tr/td[1]")
for ele in veggieWebElements:
    browserSortedVeggies.append(ele.text)

originalBrowserSortedList = browserSortedVeggies.copy()

browserSortedVeggies.sort()

assert browserSortedVeggies == originalBrowserSortedList


webbrowser console에서 $x("//tr/td[1]") 이렇게 치면 해당 xpath와 일치하는 엘리먼트들의 리스트가 나온다






Chrome options and importance
강의 코드 그냥 보자
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.select import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions
from selenium.webdriver import ActionChains
import time

service_obj = Service("/Users/jake/web_brower_drivers/chromedriver_mac_arm64/chromedriver")

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument("--start-maximized")
# chrome_options.add_argument("headless")
chrome_options.add_argument("--ignore-certificate-errors")


driver = webdriver.Chrome(service=service_obj, options=chrome_options)

driver.get("https://rahulshettyacademy.com/angularpractice/")

print(driver.title)

time.sleep(2)

more options? -> https://www.programcreek.com/python/example/100025/selenium.webdriver.ChromeOptions


