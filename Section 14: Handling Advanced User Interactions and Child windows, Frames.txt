Mouse Interactions in Selenium

Mouse Hover - 마우스 커서를 웹 엘리먼트에 갖다 댐 

There is a class called ActionChains in Selenium which will help us to do that
action = ActionChains(driver)
Using this object, it will be able to perform all those interactions

ex)
action.click_and_hold(web element) -> long press
action.context_click(web element) -> right click
action.double_click(web element) -> double click
action.drag_and_drop(source, target) -> Holds down the left mouse button on the source element, then moves to the target element and release the mouse button
action.move_to_element(web element) -> just move mouse to that particular element

action.move_to_element(driver.find_element(By.ID,"mousehover")).perform() -> 이렇게 마지막에 .perform() 해줘야 실행된다


How to handle child window using Selenium
In Selenium, opening a new window and opening a new tab is the same. 
새로운 윈도우나 탭이 열려 거기서 작업을 하고 싶을 때 Selenium cannot do directly that because the scope of Selenium web driver will be in the same tab which it has opened originally.
-> Have to explicitly tell Selenium to switch to that child window which is open and then only the scope will be transferred to this child window.
And if you want to perform any operations again and parent window again, you have to explicitly say to switch window to the back to parent and then only
control of scope will be on parent.


What are frames and techniques to handle with 

Frame is embedded html which sits top over your base html. Though they look like they are part of the page, but they are actually not. That piece of the component what we call as a frame, that is another page but we just embedded that into the our parent base html. So that is not local to the html page.
Because frame is a separate entity to local base html, driver does not have access to it. You need to switch your driver to frames mode.
How to know where frame is?  -> Find iframe tag


